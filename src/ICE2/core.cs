//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace ICE {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class core : DataSet {
        
        private CivsDataTable tableCivs;
        
        private ShipTypesDataTable tableShipTypes;
        
        private DataRelation relationShipTypesCivs;
        
        private DataRelation relationShipTypesCivs1;
        
        public core() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected core(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Civs"] != null)) {
                    this.Tables.Add(new CivsDataTable(ds.Tables["Civs"]));
                }
                if ((ds.Tables["ShipTypes"] != null)) {
                    this.Tables.Add(new ShipTypesDataTable(ds.Tables["ShipTypes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CivsDataTable Civs {
            get {
                return this.tableCivs;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShipTypesDataTable ShipTypes {
            get {
                return this.tableShipTypes;
            }
        }
        
        public override DataSet Clone() {
            core cln = ((core)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Civs"] != null)) {
                this.Tables.Add(new CivsDataTable(ds.Tables["Civs"]));
            }
            if ((ds.Tables["ShipTypes"] != null)) {
                this.Tables.Add(new ShipTypesDataTable(ds.Tables["ShipTypes"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableCivs = ((CivsDataTable)(this.Tables["Civs"]));
            if ((this.tableCivs != null)) {
                this.tableCivs.InitVars();
            }
            this.tableShipTypes = ((ShipTypesDataTable)(this.Tables["ShipTypes"]));
            if ((this.tableShipTypes != null)) {
                this.tableShipTypes.InitVars();
            }
            this.relationShipTypesCivs = this.Relations["ShipTypesCivs"];
            this.relationShipTypesCivs1 = this.Relations["ShipTypesCivs1"];
        }
        
        private void InitClass() {
            this.DataSetName = "core";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/core.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableCivs = new CivsDataTable();
            this.Tables.Add(this.tableCivs);
            this.tableShipTypes = new ShipTypesDataTable();
            this.Tables.Add(this.tableShipTypes);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("ShipTypesCivs", new DataColumn[] {
                        this.tableShipTypes.ShipTypeIDColumn}, new DataColumn[] {
                        this.tableCivs.EscapePodShipTypeIDColumn});
            this.tableCivs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("ShipTypesCivs1", new DataColumn[] {
                        this.tableShipTypes.ShipTypeIDColumn}, new DataColumn[] {
                        this.tableCivs.InitialStationTypeIDColumn});
            this.tableCivs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationShipTypesCivs = new DataRelation("ShipTypesCivs", new DataColumn[] {
                        this.tableShipTypes.ShipTypeIDColumn}, new DataColumn[] {
                        this.tableCivs.EscapePodShipTypeIDColumn}, false);
            this.Relations.Add(this.relationShipTypesCivs);
            this.relationShipTypesCivs1 = new DataRelation("ShipTypesCivs1", new DataColumn[] {
                        this.tableShipTypes.ShipTypeIDColumn}, new DataColumn[] {
                        this.tableCivs.InitialStationTypeIDColumn}, false);
            this.Relations.Add(this.relationShipTypesCivs1);
        }
        
        private bool ShouldSerializeCivs() {
            return false;
        }
        
        private bool ShouldSerializeShipTypes() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void CivsRowChangeEventHandler(object sender, CivsRowChangeEvent e);
        
        public delegate void ShipTypesRowChangeEventHandler(object sender, ShipTypesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CivsDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCivID;
            
            private DataColumn columnName;
            
            private DataColumn columnDescription;
            
            private DataColumn columnEscapePodShipTypeID;
            
            private DataColumn columnTechBitsCiv;
            
            private DataColumn columnStartingGlobalAttributeID;
            
            private DataColumn columnInitialStationTypeID;
            
            private DataColumn columnIconName;
            
            private DataColumn columnStationHUD;
            
            private DataColumn columnPreferredPartID15;
            
            private DataColumn columnPreferredPartID14;
            
            private DataColumn columnPreferredPartID13;
            
            private DataColumn columnPreferredPartID12;
            
            private DataColumn columnPreferredPartID11;
            
            private DataColumn columnPreferredPartID10;
            
            private DataColumn columnPreferredPartID9;
            
            private DataColumn columnPreferredPartID8;
            
            private DataColumn columnPreferredPartID7;
            
            private DataColumn columnPreferredPartID6;
            
            private DataColumn columnPreferredPartID5;
            
            private DataColumn columnPreferredPartID4;
            
            private DataColumn columnPreferredPartID3;
            
            private DataColumn columnPreferredPartID2;
            
            private DataColumn columnPreferredPartID1;
            
            private DataColumn columnTechBitsCivNoDev;
            
            private DataColumn columnBonusMoney;
            
            private DataColumn columnIncomeMoney;
            
            internal CivsDataTable() : 
                    base("Civs") {
                this.InitClass();
            }
            
            internal CivsDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CivIDColumn {
                get {
                    return this.columnCivID;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn EscapePodShipTypeIDColumn {
                get {
                    return this.columnEscapePodShipTypeID;
                }
            }
            
            internal DataColumn TechBitsCivColumn {
                get {
                    return this.columnTechBitsCiv;
                }
            }
            
            internal DataColumn StartingGlobalAttributeIDColumn {
                get {
                    return this.columnStartingGlobalAttributeID;
                }
            }
            
            internal DataColumn InitialStationTypeIDColumn {
                get {
                    return this.columnInitialStationTypeID;
                }
            }
            
            internal DataColumn IconNameColumn {
                get {
                    return this.columnIconName;
                }
            }
            
            internal DataColumn StationHUDColumn {
                get {
                    return this.columnStationHUD;
                }
            }
            
            internal DataColumn PreferredPartID15Column {
                get {
                    return this.columnPreferredPartID15;
                }
            }
            
            internal DataColumn PreferredPartID14Column {
                get {
                    return this.columnPreferredPartID14;
                }
            }
            
            internal DataColumn PreferredPartID13Column {
                get {
                    return this.columnPreferredPartID13;
                }
            }
            
            internal DataColumn PreferredPartID12Column {
                get {
                    return this.columnPreferredPartID12;
                }
            }
            
            internal DataColumn PreferredPartID11Column {
                get {
                    return this.columnPreferredPartID11;
                }
            }
            
            internal DataColumn PreferredPartID10Column {
                get {
                    return this.columnPreferredPartID10;
                }
            }
            
            internal DataColumn PreferredPartID9Column {
                get {
                    return this.columnPreferredPartID9;
                }
            }
            
            internal DataColumn PreferredPartID8Column {
                get {
                    return this.columnPreferredPartID8;
                }
            }
            
            internal DataColumn PreferredPartID7Column {
                get {
                    return this.columnPreferredPartID7;
                }
            }
            
            internal DataColumn PreferredPartID6Column {
                get {
                    return this.columnPreferredPartID6;
                }
            }
            
            internal DataColumn PreferredPartID5Column {
                get {
                    return this.columnPreferredPartID5;
                }
            }
            
            internal DataColumn PreferredPartID4Column {
                get {
                    return this.columnPreferredPartID4;
                }
            }
            
            internal DataColumn PreferredPartID3Column {
                get {
                    return this.columnPreferredPartID3;
                }
            }
            
            internal DataColumn PreferredPartID2Column {
                get {
                    return this.columnPreferredPartID2;
                }
            }
            
            internal DataColumn PreferredPartID1Column {
                get {
                    return this.columnPreferredPartID1;
                }
            }
            
            internal DataColumn TechBitsCivNoDevColumn {
                get {
                    return this.columnTechBitsCivNoDev;
                }
            }
            
            internal DataColumn BonusMoneyColumn {
                get {
                    return this.columnBonusMoney;
                }
            }
            
            internal DataColumn IncomeMoneyColumn {
                get {
                    return this.columnIncomeMoney;
                }
            }
            
            public CivsRow this[int index] {
                get {
                    return ((CivsRow)(this.Rows[index]));
                }
            }
            
            public event CivsRowChangeEventHandler CivsRowChanged;
            
            public event CivsRowChangeEventHandler CivsRowChanging;
            
            public event CivsRowChangeEventHandler CivsRowDeleted;
            
            public event CivsRowChangeEventHandler CivsRowDeleting;
            
            public void AddCivsRow(CivsRow row) {
                this.Rows.Add(row);
            }
            
            public CivsRow AddCivsRow(
                        short CivID, 
                        string Name, 
                        string Description, 
                        ShipTypesRow parentShipTypesRowByShipTypesCivs, 
                        string TechBitsCiv, 
                        short StartingGlobalAttributeID, 
                        ShipTypesRow parentShipTypesRowByShipTypesCivs1, 
                        string IconName, 
                        string StationHUD, 
                        short PreferredPartID15, 
                        short PreferredPartID14, 
                        short PreferredPartID13, 
                        short PreferredPartID12, 
                        short PreferredPartID11, 
                        short PreferredPartID10, 
                        short PreferredPartID9, 
                        short PreferredPartID8, 
                        short PreferredPartID7, 
                        short PreferredPartID6, 
                        short PreferredPartID5, 
                        short PreferredPartID4, 
                        short PreferredPartID3, 
                        short PreferredPartID2, 
                        short PreferredPartID1, 
                        string TechBitsCivNoDev, 
                        System.Single BonusMoney, 
                        System.Single IncomeMoney) {
                CivsRow rowCivsRow = ((CivsRow)(this.NewRow()));
                rowCivsRow.ItemArray = new object[] {
                        CivID,
                        Name,
                        Description,
                        parentShipTypesRowByShipTypesCivs[1],
                        TechBitsCiv,
                        StartingGlobalAttributeID,
                        parentShipTypesRowByShipTypesCivs1[1],
                        IconName,
                        StationHUD,
                        PreferredPartID15,
                        PreferredPartID14,
                        PreferredPartID13,
                        PreferredPartID12,
                        PreferredPartID11,
                        PreferredPartID10,
                        PreferredPartID9,
                        PreferredPartID8,
                        PreferredPartID7,
                        PreferredPartID6,
                        PreferredPartID5,
                        PreferredPartID4,
                        PreferredPartID3,
                        PreferredPartID2,
                        PreferredPartID1,
                        TechBitsCivNoDev,
                        BonusMoney,
                        IncomeMoney};
                this.Rows.Add(rowCivsRow);
                return rowCivsRow;
            }
            
            public CivsRow FindByCivID(short CivID) {
                return ((CivsRow)(this.Rows.Find(new object[] {
                            CivID})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CivsDataTable cln = ((CivsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CivsDataTable();
            }
            
            internal void InitVars() {
                this.columnCivID = this.Columns["CivID"];
                this.columnName = this.Columns["Name"];
                this.columnDescription = this.Columns["Description"];
                this.columnEscapePodShipTypeID = this.Columns["EscapePodShipTypeID"];
                this.columnTechBitsCiv = this.Columns["TechBitsCiv"];
                this.columnStartingGlobalAttributeID = this.Columns["StartingGlobalAttributeID"];
                this.columnInitialStationTypeID = this.Columns["InitialStationTypeID"];
                this.columnIconName = this.Columns["IconName"];
                this.columnStationHUD = this.Columns["StationHUD"];
                this.columnPreferredPartID15 = this.Columns["PreferredPartID15"];
                this.columnPreferredPartID14 = this.Columns["PreferredPartID14"];
                this.columnPreferredPartID13 = this.Columns["PreferredPartID13"];
                this.columnPreferredPartID12 = this.Columns["PreferredPartID12"];
                this.columnPreferredPartID11 = this.Columns["PreferredPartID11"];
                this.columnPreferredPartID10 = this.Columns["PreferredPartID10"];
                this.columnPreferredPartID9 = this.Columns["PreferredPartID9"];
                this.columnPreferredPartID8 = this.Columns["PreferredPartID8"];
                this.columnPreferredPartID7 = this.Columns["PreferredPartID7"];
                this.columnPreferredPartID6 = this.Columns["PreferredPartID6"];
                this.columnPreferredPartID5 = this.Columns["PreferredPartID5"];
                this.columnPreferredPartID4 = this.Columns["PreferredPartID4"];
                this.columnPreferredPartID3 = this.Columns["PreferredPartID3"];
                this.columnPreferredPartID2 = this.Columns["PreferredPartID2"];
                this.columnPreferredPartID1 = this.Columns["PreferredPartID1"];
                this.columnTechBitsCivNoDev = this.Columns["TechBitsCivNoDev"];
                this.columnBonusMoney = this.Columns["BonusMoney"];
                this.columnIncomeMoney = this.Columns["IncomeMoney"];
            }
            
            private void InitClass() {
                this.columnCivID = new DataColumn("CivID", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCivID);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnEscapePodShipTypeID = new DataColumn("EscapePodShipTypeID", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEscapePodShipTypeID);
                this.columnTechBitsCiv = new DataColumn("TechBitsCiv", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTechBitsCiv);
                this.columnStartingGlobalAttributeID = new DataColumn("StartingGlobalAttributeID", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStartingGlobalAttributeID);
                this.columnInitialStationTypeID = new DataColumn("InitialStationTypeID", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInitialStationTypeID);
                this.columnIconName = new DataColumn("IconName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIconName);
                this.columnStationHUD = new DataColumn("StationHUD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStationHUD);
                this.columnPreferredPartID15 = new DataColumn("PreferredPartID15", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID15);
                this.columnPreferredPartID14 = new DataColumn("PreferredPartID14", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID14);
                this.columnPreferredPartID13 = new DataColumn("PreferredPartID13", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID13);
                this.columnPreferredPartID12 = new DataColumn("PreferredPartID12", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID12);
                this.columnPreferredPartID11 = new DataColumn("PreferredPartID11", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID11);
                this.columnPreferredPartID10 = new DataColumn("PreferredPartID10", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID10);
                this.columnPreferredPartID9 = new DataColumn("PreferredPartID9", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID9);
                this.columnPreferredPartID8 = new DataColumn("PreferredPartID8", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID8);
                this.columnPreferredPartID7 = new DataColumn("PreferredPartID7", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID7);
                this.columnPreferredPartID6 = new DataColumn("PreferredPartID6", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID6);
                this.columnPreferredPartID5 = new DataColumn("PreferredPartID5", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID5);
                this.columnPreferredPartID4 = new DataColumn("PreferredPartID4", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID4);
                this.columnPreferredPartID3 = new DataColumn("PreferredPartID3", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID3);
                this.columnPreferredPartID2 = new DataColumn("PreferredPartID2", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID2);
                this.columnPreferredPartID1 = new DataColumn("PreferredPartID1", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID1);
                this.columnTechBitsCivNoDev = new DataColumn("TechBitsCivNoDev", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTechBitsCivNoDev);
                this.columnBonusMoney = new DataColumn("BonusMoney", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonusMoney);
                this.columnIncomeMoney = new DataColumn("IncomeMoney", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncomeMoney);
                this.Constraints.Add(new UniqueConstraint("coreKey1", new DataColumn[] {
                                this.columnCivID}, true));
                this.columnCivID.AllowDBNull = false;
                this.columnCivID.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 24;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 200;
                this.columnEscapePodShipTypeID.AllowDBNull = false;
                this.columnTechBitsCiv.AllowDBNull = false;
                this.columnInitialStationTypeID.AllowDBNull = false;
                this.columnIconName.AllowDBNull = false;
                this.columnStationHUD.AllowDBNull = false;
                this.columnStationHUD.DefaultValue = "dialog";
                this.columnTechBitsCivNoDev.AllowDBNull = false;
                this.columnBonusMoney.AllowDBNull = false;
                this.columnBonusMoney.DefaultValue = 0F;
                this.columnIncomeMoney.AllowDBNull = false;
                this.columnIncomeMoney.DefaultValue = 0F;
            }
            
            public CivsRow NewCivsRow() {
                return ((CivsRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CivsRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CivsRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CivsRowChanged != null)) {
                    this.CivsRowChanged(this, new CivsRowChangeEvent(((CivsRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CivsRowChanging != null)) {
                    this.CivsRowChanging(this, new CivsRowChangeEvent(((CivsRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CivsRowDeleted != null)) {
                    this.CivsRowDeleted(this, new CivsRowChangeEvent(((CivsRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CivsRowDeleting != null)) {
                    this.CivsRowDeleting(this, new CivsRowChangeEvent(((CivsRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCivsRow(CivsRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CivsRow : DataRow {
            
            private CivsDataTable tableCivs;
            
            internal CivsRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCivs = ((CivsDataTable)(this.Table));
            }
            
            public short CivID {
                get {
                    return ((short)(this[this.tableCivs.CivIDColumn]));
                }
                set {
                    this[this.tableCivs.CivIDColumn] = value;
                }
            }
            
            public string Name {
                get {
                    return ((string)(this[this.tableCivs.NameColumn]));
                }
                set {
                    this[this.tableCivs.NameColumn] = value;
                }
            }
            
            public string Description {
                get {
                    return ((string)(this[this.tableCivs.DescriptionColumn]));
                }
                set {
                    this[this.tableCivs.DescriptionColumn] = value;
                }
            }
            
            public short EscapePodShipTypeID {
                get {
                    return ((short)(this[this.tableCivs.EscapePodShipTypeIDColumn]));
                }
                set {
                    this[this.tableCivs.EscapePodShipTypeIDColumn] = value;
                }
            }
            
            public string TechBitsCiv {
                get {
                    return ((string)(this[this.tableCivs.TechBitsCivColumn]));
                }
                set {
                    this[this.tableCivs.TechBitsCivColumn] = value;
                }
            }
            
            public short StartingGlobalAttributeID {
                get {
                    try {
                        return ((short)(this[this.tableCivs.StartingGlobalAttributeIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.StartingGlobalAttributeIDColumn] = value;
                }
            }
            
            public short InitialStationTypeID {
                get {
                    return ((short)(this[this.tableCivs.InitialStationTypeIDColumn]));
                }
                set {
                    this[this.tableCivs.InitialStationTypeIDColumn] = value;
                }
            }
            
            public string IconName {
                get {
                    return ((string)(this[this.tableCivs.IconNameColumn]));
                }
                set {
                    this[this.tableCivs.IconNameColumn] = value;
                }
            }
            
            public string StationHUD {
                get {
                    return ((string)(this[this.tableCivs.StationHUDColumn]));
                }
                set {
                    this[this.tableCivs.StationHUDColumn] = value;
                }
            }
            
            public short PreferredPartID15 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID15Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID15Column] = value;
                }
            }
            
            public short PreferredPartID14 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID14Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID14Column] = value;
                }
            }
            
            public short PreferredPartID13 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID13Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID13Column] = value;
                }
            }
            
            public short PreferredPartID12 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID12Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID12Column] = value;
                }
            }
            
            public short PreferredPartID11 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID11Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID11Column] = value;
                }
            }
            
            public short PreferredPartID10 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID10Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID10Column] = value;
                }
            }
            
            public short PreferredPartID9 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID9Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID9Column] = value;
                }
            }
            
            public short PreferredPartID8 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID8Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID8Column] = value;
                }
            }
            
            public short PreferredPartID7 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID7Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID7Column] = value;
                }
            }
            
            public short PreferredPartID6 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID6Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID6Column] = value;
                }
            }
            
            public short PreferredPartID5 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID5Column] = value;
                }
            }
            
            public short PreferredPartID4 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID4Column] = value;
                }
            }
            
            public short PreferredPartID3 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID3Column] = value;
                }
            }
            
            public short PreferredPartID2 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID2Column] = value;
                }
            }
            
            public short PreferredPartID1 {
                get {
                    try {
                        return ((short)(this[this.tableCivs.PreferredPartID1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCivs.PreferredPartID1Column] = value;
                }
            }
            
            public string TechBitsCivNoDev {
                get {
                    return ((string)(this[this.tableCivs.TechBitsCivNoDevColumn]));
                }
                set {
                    this[this.tableCivs.TechBitsCivNoDevColumn] = value;
                }
            }
            
            public System.Single BonusMoney {
                get {
                    return ((System.Single)(this[this.tableCivs.BonusMoneyColumn]));
                }
                set {
                    this[this.tableCivs.BonusMoneyColumn] = value;
                }
            }
            
            public System.Single IncomeMoney {
                get {
                    return ((System.Single)(this[this.tableCivs.IncomeMoneyColumn]));
                }
                set {
                    this[this.tableCivs.IncomeMoneyColumn] = value;
                }
            }
            
            public ShipTypesRow ShipTypesRowByShipTypesCivs {
                get {
                    return ((ShipTypesRow)(this.GetParentRow(this.Table.ParentRelations["ShipTypesCivs"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ShipTypesCivs"]);
                }
            }
            
            public ShipTypesRow ShipTypesRowByShipTypesCivs1 {
                get {
                    return ((ShipTypesRow)(this.GetParentRow(this.Table.ParentRelations["ShipTypesCivs1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ShipTypesCivs1"]);
                }
            }
            
            public bool IsStartingGlobalAttributeIDNull() {
                return this.IsNull(this.tableCivs.StartingGlobalAttributeIDColumn);
            }
            
            public void SetStartingGlobalAttributeIDNull() {
                this[this.tableCivs.StartingGlobalAttributeIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID15Null() {
                return this.IsNull(this.tableCivs.PreferredPartID15Column);
            }
            
            public void SetPreferredPartID15Null() {
                this[this.tableCivs.PreferredPartID15Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID14Null() {
                return this.IsNull(this.tableCivs.PreferredPartID14Column);
            }
            
            public void SetPreferredPartID14Null() {
                this[this.tableCivs.PreferredPartID14Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID13Null() {
                return this.IsNull(this.tableCivs.PreferredPartID13Column);
            }
            
            public void SetPreferredPartID13Null() {
                this[this.tableCivs.PreferredPartID13Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID12Null() {
                return this.IsNull(this.tableCivs.PreferredPartID12Column);
            }
            
            public void SetPreferredPartID12Null() {
                this[this.tableCivs.PreferredPartID12Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID11Null() {
                return this.IsNull(this.tableCivs.PreferredPartID11Column);
            }
            
            public void SetPreferredPartID11Null() {
                this[this.tableCivs.PreferredPartID11Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID10Null() {
                return this.IsNull(this.tableCivs.PreferredPartID10Column);
            }
            
            public void SetPreferredPartID10Null() {
                this[this.tableCivs.PreferredPartID10Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID9Null() {
                return this.IsNull(this.tableCivs.PreferredPartID9Column);
            }
            
            public void SetPreferredPartID9Null() {
                this[this.tableCivs.PreferredPartID9Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID8Null() {
                return this.IsNull(this.tableCivs.PreferredPartID8Column);
            }
            
            public void SetPreferredPartID8Null() {
                this[this.tableCivs.PreferredPartID8Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID7Null() {
                return this.IsNull(this.tableCivs.PreferredPartID7Column);
            }
            
            public void SetPreferredPartID7Null() {
                this[this.tableCivs.PreferredPartID7Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID6Null() {
                return this.IsNull(this.tableCivs.PreferredPartID6Column);
            }
            
            public void SetPreferredPartID6Null() {
                this[this.tableCivs.PreferredPartID6Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID5Null() {
                return this.IsNull(this.tableCivs.PreferredPartID5Column);
            }
            
            public void SetPreferredPartID5Null() {
                this[this.tableCivs.PreferredPartID5Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID4Null() {
                return this.IsNull(this.tableCivs.PreferredPartID4Column);
            }
            
            public void SetPreferredPartID4Null() {
                this[this.tableCivs.PreferredPartID4Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID3Null() {
                return this.IsNull(this.tableCivs.PreferredPartID3Column);
            }
            
            public void SetPreferredPartID3Null() {
                this[this.tableCivs.PreferredPartID3Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID2Null() {
                return this.IsNull(this.tableCivs.PreferredPartID2Column);
            }
            
            public void SetPreferredPartID2Null() {
                this[this.tableCivs.PreferredPartID2Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID1Null() {
                return this.IsNull(this.tableCivs.PreferredPartID1Column);
            }
            
            public void SetPreferredPartID1Null() {
                this[this.tableCivs.PreferredPartID1Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CivsRowChangeEvent : EventArgs {
            
            private CivsRow eventRow;
            
            private DataRowAction eventAction;
            
            public CivsRowChangeEvent(CivsRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CivsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ShipTypesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnName;
            
            private DataColumn columnShipTypeID;
            
            private DataColumn columnModel;
            
            private DataColumn columnLength;
            
            private DataColumn columnWeight;
            
            private DataColumn columnPrice;
            
            private DataColumn columnBaseMaxSpeed;
            
            private DataColumn columnBaseHitPoints;
            
            private DataColumn columnBaseScannerRange;
            
            private DataColumn columnDescription;
            
            private DataColumn columnMaxRollRate;
            
            private DataColumn columnMaxPitchRate;
            
            private DataColumn columnMaxYawRate;
            
            private DataColumn columnDriftRoll;
            
            private DataColumn columnDriftPitch;
            
            private DataColumn columnDriftYaw;
            
            private DataColumn columnAcceleration;
            
            private DataColumn columnAccelSideMultiplier;
            
            private DataColumn columnAccelBackMultiplier;
            
            private DataColumn columnBaseSignature;
            
            private DataColumn columnEnergyMax;
            
            private DataColumn columnRateRechargeEnergy;
            
            private DataColumn columnTechBitsRequired;
            
            private DataColumn columnTechBitsEffect;
            
            private DataColumn columnCapabilities;
            
            private DataColumn columnMaxAmmo;
            
            private DataColumn columnMaxFuel;
            
            private DataColumn columnPRIcon;
            
            private DataColumn columnShieldPartMask;
            
            private DataColumn columnAfterburnerPartMask;
            
            private DataColumn columnCloakPartMask;
            
            private DataColumn columnMagazinePartMask;
            
            private DataColumn columnDispenserPartMask;
            
            private DataColumn columnChaffPartMask;
            
            private DataColumn columnMagazineCapacity;
            
            private DataColumn columnDispenserCapacity;
            
            private DataColumn columnChaffCapacity;
            
            private DataColumn columnSuccessorHullID;
            
            private DataColumn columnPilotHUD;
            
            private DataColumn columnObserverHUD;
            
            private DataColumn columnInteriorSound;
            
            private DataColumn columnExteriorSound;
            
            private DataColumn columnThrustInteriorSound;
            
            private DataColumn columnThrustExteriorSound;
            
            private DataColumn columnTurnInteriorSound;
            
            private DataColumn columnTurnExteriorSound;
            
            private DataColumn columnSortOrder;
            
            private DataColumn columnPreferredPartID14;
            
            private DataColumn columnPreferredPartID13;
            
            private DataColumn columnPreferredPartID12;
            
            private DataColumn columnPreferredPartID11;
            
            private DataColumn columnPreferredPartID10;
            
            private DataColumn columnPreferredPartID9;
            
            private DataColumn columnPreferredPartID8;
            
            private DataColumn columnPreferredPartID7;
            
            private DataColumn columnPreferredPartID6;
            
            private DataColumn columnPreferredPartID5;
            
            private DataColumn columnPreferredPartID4;
            
            private DataColumn columnPreferredPartID3;
            
            private DataColumn columnPreferredPartID2;
            
            private DataColumn columnPreferredPartID1;
            
            private DataColumn columnDefenseType;
            
            private DataColumn columnSecondsToBuild;
            
            private DataColumn columnGroupID;
            
            private DataColumn columnRipcordSpeed;
            
            private DataColumn columnECM;
            
            private DataColumn columnRipcordCost;
            
            internal ShipTypesDataTable() : 
                    base("ShipTypes") {
                this.InitClass();
            }
            
            internal ShipTypesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn ShipTypeIDColumn {
                get {
                    return this.columnShipTypeID;
                }
            }
            
            internal DataColumn ModelColumn {
                get {
                    return this.columnModel;
                }
            }
            
            internal DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            internal DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            internal DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            internal DataColumn BaseMaxSpeedColumn {
                get {
                    return this.columnBaseMaxSpeed;
                }
            }
            
            internal DataColumn BaseHitPointsColumn {
                get {
                    return this.columnBaseHitPoints;
                }
            }
            
            internal DataColumn BaseScannerRangeColumn {
                get {
                    return this.columnBaseScannerRange;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn MaxRollRateColumn {
                get {
                    return this.columnMaxRollRate;
                }
            }
            
            internal DataColumn MaxPitchRateColumn {
                get {
                    return this.columnMaxPitchRate;
                }
            }
            
            internal DataColumn MaxYawRateColumn {
                get {
                    return this.columnMaxYawRate;
                }
            }
            
            internal DataColumn DriftRollColumn {
                get {
                    return this.columnDriftRoll;
                }
            }
            
            internal DataColumn DriftPitchColumn {
                get {
                    return this.columnDriftPitch;
                }
            }
            
            internal DataColumn DriftYawColumn {
                get {
                    return this.columnDriftYaw;
                }
            }
            
            internal DataColumn AccelerationColumn {
                get {
                    return this.columnAcceleration;
                }
            }
            
            internal DataColumn AccelSideMultiplierColumn {
                get {
                    return this.columnAccelSideMultiplier;
                }
            }
            
            internal DataColumn AccelBackMultiplierColumn {
                get {
                    return this.columnAccelBackMultiplier;
                }
            }
            
            internal DataColumn BaseSignatureColumn {
                get {
                    return this.columnBaseSignature;
                }
            }
            
            internal DataColumn EnergyMaxColumn {
                get {
                    return this.columnEnergyMax;
                }
            }
            
            internal DataColumn RateRechargeEnergyColumn {
                get {
                    return this.columnRateRechargeEnergy;
                }
            }
            
            internal DataColumn TechBitsRequiredColumn {
                get {
                    return this.columnTechBitsRequired;
                }
            }
            
            internal DataColumn TechBitsEffectColumn {
                get {
                    return this.columnTechBitsEffect;
                }
            }
            
            internal DataColumn CapabilitiesColumn {
                get {
                    return this.columnCapabilities;
                }
            }
            
            internal DataColumn MaxAmmoColumn {
                get {
                    return this.columnMaxAmmo;
                }
            }
            
            internal DataColumn MaxFuelColumn {
                get {
                    return this.columnMaxFuel;
                }
            }
            
            internal DataColumn PRIconColumn {
                get {
                    return this.columnPRIcon;
                }
            }
            
            internal DataColumn ShieldPartMaskColumn {
                get {
                    return this.columnShieldPartMask;
                }
            }
            
            internal DataColumn AfterburnerPartMaskColumn {
                get {
                    return this.columnAfterburnerPartMask;
                }
            }
            
            internal DataColumn CloakPartMaskColumn {
                get {
                    return this.columnCloakPartMask;
                }
            }
            
            internal DataColumn MagazinePartMaskColumn {
                get {
                    return this.columnMagazinePartMask;
                }
            }
            
            internal DataColumn DispenserPartMaskColumn {
                get {
                    return this.columnDispenserPartMask;
                }
            }
            
            internal DataColumn ChaffPartMaskColumn {
                get {
                    return this.columnChaffPartMask;
                }
            }
            
            internal DataColumn MagazineCapacityColumn {
                get {
                    return this.columnMagazineCapacity;
                }
            }
            
            internal DataColumn DispenserCapacityColumn {
                get {
                    return this.columnDispenserCapacity;
                }
            }
            
            internal DataColumn ChaffCapacityColumn {
                get {
                    return this.columnChaffCapacity;
                }
            }
            
            internal DataColumn SuccessorHullIDColumn {
                get {
                    return this.columnSuccessorHullID;
                }
            }
            
            internal DataColumn PilotHUDColumn {
                get {
                    return this.columnPilotHUD;
                }
            }
            
            internal DataColumn ObserverHUDColumn {
                get {
                    return this.columnObserverHUD;
                }
            }
            
            internal DataColumn InteriorSoundColumn {
                get {
                    return this.columnInteriorSound;
                }
            }
            
            internal DataColumn ExteriorSoundColumn {
                get {
                    return this.columnExteriorSound;
                }
            }
            
            internal DataColumn ThrustInteriorSoundColumn {
                get {
                    return this.columnThrustInteriorSound;
                }
            }
            
            internal DataColumn ThrustExteriorSoundColumn {
                get {
                    return this.columnThrustExteriorSound;
                }
            }
            
            internal DataColumn TurnInteriorSoundColumn {
                get {
                    return this.columnTurnInteriorSound;
                }
            }
            
            internal DataColumn TurnExteriorSoundColumn {
                get {
                    return this.columnTurnExteriorSound;
                }
            }
            
            internal DataColumn SortOrderColumn {
                get {
                    return this.columnSortOrder;
                }
            }
            
            internal DataColumn PreferredPartID14Column {
                get {
                    return this.columnPreferredPartID14;
                }
            }
            
            internal DataColumn PreferredPartID13Column {
                get {
                    return this.columnPreferredPartID13;
                }
            }
            
            internal DataColumn PreferredPartID12Column {
                get {
                    return this.columnPreferredPartID12;
                }
            }
            
            internal DataColumn PreferredPartID11Column {
                get {
                    return this.columnPreferredPartID11;
                }
            }
            
            internal DataColumn PreferredPartID10Column {
                get {
                    return this.columnPreferredPartID10;
                }
            }
            
            internal DataColumn PreferredPartID9Column {
                get {
                    return this.columnPreferredPartID9;
                }
            }
            
            internal DataColumn PreferredPartID8Column {
                get {
                    return this.columnPreferredPartID8;
                }
            }
            
            internal DataColumn PreferredPartID7Column {
                get {
                    return this.columnPreferredPartID7;
                }
            }
            
            internal DataColumn PreferredPartID6Column {
                get {
                    return this.columnPreferredPartID6;
                }
            }
            
            internal DataColumn PreferredPartID5Column {
                get {
                    return this.columnPreferredPartID5;
                }
            }
            
            internal DataColumn PreferredPartID4Column {
                get {
                    return this.columnPreferredPartID4;
                }
            }
            
            internal DataColumn PreferredPartID3Column {
                get {
                    return this.columnPreferredPartID3;
                }
            }
            
            internal DataColumn PreferredPartID2Column {
                get {
                    return this.columnPreferredPartID2;
                }
            }
            
            internal DataColumn PreferredPartID1Column {
                get {
                    return this.columnPreferredPartID1;
                }
            }
            
            internal DataColumn DefenseTypeColumn {
                get {
                    return this.columnDefenseType;
                }
            }
            
            internal DataColumn SecondsToBuildColumn {
                get {
                    return this.columnSecondsToBuild;
                }
            }
            
            internal DataColumn GroupIDColumn {
                get {
                    return this.columnGroupID;
                }
            }
            
            internal DataColumn RipcordSpeedColumn {
                get {
                    return this.columnRipcordSpeed;
                }
            }
            
            internal DataColumn ECMColumn {
                get {
                    return this.columnECM;
                }
            }
            
            internal DataColumn RipcordCostColumn {
                get {
                    return this.columnRipcordCost;
                }
            }
            
            public ShipTypesRow this[int index] {
                get {
                    return ((ShipTypesRow)(this.Rows[index]));
                }
            }
            
            public event ShipTypesRowChangeEventHandler ShipTypesRowChanged;
            
            public event ShipTypesRowChangeEventHandler ShipTypesRowChanging;
            
            public event ShipTypesRowChangeEventHandler ShipTypesRowDeleted;
            
            public event ShipTypesRowChangeEventHandler ShipTypesRowDeleting;
            
            public void AddShipTypesRow(ShipTypesRow row) {
                this.Rows.Add(row);
            }
            
            public ShipTypesRow AddShipTypesRow(
                        string Name, 
                        short ShipTypeID, 
                        string Model, 
                        System.Single Length, 
                        System.Single Weight, 
                        int Price, 
                        int BaseMaxSpeed, 
                        short BaseHitPoints, 
                        int BaseScannerRange, 
                        string Description, 
                        System.Single MaxRollRate, 
                        System.Single MaxPitchRate, 
                        System.Single MaxYawRate, 
                        System.Single DriftRoll, 
                        System.Single DriftPitch, 
                        System.Single DriftYaw, 
                        System.Single Acceleration, 
                        System.Single AccelSideMultiplier, 
                        System.Single AccelBackMultiplier, 
                        short BaseSignature, 
                        System.Single EnergyMax, 
                        System.Single RateRechargeEnergy, 
                        string TechBitsRequired, 
                        string TechBitsEffect, 
                        short Capabilities, 
                        short MaxAmmo, 
                        short MaxFuel, 
                        string PRIcon, 
                        short ShieldPartMask, 
                        short AfterburnerPartMask, 
                        short CloakPartMask, 
                        short MagazinePartMask, 
                        short DispenserPartMask, 
                        short ChaffPartMask, 
                        short MagazineCapacity, 
                        short DispenserCapacity, 
                        short ChaffCapacity, 
                        short SuccessorHullID, 
                        string PilotHUD, 
                        string ObserverHUD, 
                        short InteriorSound, 
                        short ExteriorSound, 
                        short ThrustInteriorSound, 
                        short ThrustExteriorSound, 
                        short TurnInteriorSound, 
                        short TurnExteriorSound, 
                        int SortOrder, 
                        short PreferredPartID14, 
                        short PreferredPartID13, 
                        short PreferredPartID12, 
                        short PreferredPartID11, 
                        short PreferredPartID10, 
                        short PreferredPartID9, 
                        short PreferredPartID8, 
                        short PreferredPartID7, 
                        short PreferredPartID6, 
                        short PreferredPartID5, 
                        short PreferredPartID4, 
                        short PreferredPartID3, 
                        short PreferredPartID2, 
                        short PreferredPartID1, 
                        System.Byte DefenseType, 
                        short SecondsToBuild, 
                        System.Byte GroupID, 
                        System.Single RipcordSpeed, 
                        System.Single ECM, 
                        System.Single RipcordCost) {
                ShipTypesRow rowShipTypesRow = ((ShipTypesRow)(this.NewRow()));
                rowShipTypesRow.ItemArray = new object[] {
                        Name,
                        ShipTypeID,
                        Model,
                        Length,
                        Weight,
                        Price,
                        BaseMaxSpeed,
                        BaseHitPoints,
                        BaseScannerRange,
                        Description,
                        MaxRollRate,
                        MaxPitchRate,
                        MaxYawRate,
                        DriftRoll,
                        DriftPitch,
                        DriftYaw,
                        Acceleration,
                        AccelSideMultiplier,
                        AccelBackMultiplier,
                        BaseSignature,
                        EnergyMax,
                        RateRechargeEnergy,
                        TechBitsRequired,
                        TechBitsEffect,
                        Capabilities,
                        MaxAmmo,
                        MaxFuel,
                        PRIcon,
                        ShieldPartMask,
                        AfterburnerPartMask,
                        CloakPartMask,
                        MagazinePartMask,
                        DispenserPartMask,
                        ChaffPartMask,
                        MagazineCapacity,
                        DispenserCapacity,
                        ChaffCapacity,
                        SuccessorHullID,
                        PilotHUD,
                        ObserverHUD,
                        InteriorSound,
                        ExteriorSound,
                        ThrustInteriorSound,
                        ThrustExteriorSound,
                        TurnInteriorSound,
                        TurnExteriorSound,
                        SortOrder,
                        PreferredPartID14,
                        PreferredPartID13,
                        PreferredPartID12,
                        PreferredPartID11,
                        PreferredPartID10,
                        PreferredPartID9,
                        PreferredPartID8,
                        PreferredPartID7,
                        PreferredPartID6,
                        PreferredPartID5,
                        PreferredPartID4,
                        PreferredPartID3,
                        PreferredPartID2,
                        PreferredPartID1,
                        DefenseType,
                        SecondsToBuild,
                        GroupID,
                        RipcordSpeed,
                        ECM,
                        RipcordCost};
                this.Rows.Add(rowShipTypesRow);
                return rowShipTypesRow;
            }
            
            public ShipTypesRow FindByShipTypeID(short ShipTypeID) {
                return ((ShipTypesRow)(this.Rows.Find(new object[] {
                            ShipTypeID})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ShipTypesDataTable cln = ((ShipTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ShipTypesDataTable();
            }
            
            internal void InitVars() {
                this.columnName = this.Columns["Name"];
                this.columnShipTypeID = this.Columns["ShipTypeID"];
                this.columnModel = this.Columns["Model"];
                this.columnLength = this.Columns["Length"];
                this.columnWeight = this.Columns["Weight"];
                this.columnPrice = this.Columns["Price"];
                this.columnBaseMaxSpeed = this.Columns["BaseMaxSpeed"];
                this.columnBaseHitPoints = this.Columns["BaseHitPoints"];
                this.columnBaseScannerRange = this.Columns["BaseScannerRange"];
                this.columnDescription = this.Columns["Description"];
                this.columnMaxRollRate = this.Columns["MaxRollRate"];
                this.columnMaxPitchRate = this.Columns["MaxPitchRate"];
                this.columnMaxYawRate = this.Columns["MaxYawRate"];
                this.columnDriftRoll = this.Columns["DriftRoll"];
                this.columnDriftPitch = this.Columns["DriftPitch"];
                this.columnDriftYaw = this.Columns["DriftYaw"];
                this.columnAcceleration = this.Columns["Acceleration"];
                this.columnAccelSideMultiplier = this.Columns["AccelSideMultiplier"];
                this.columnAccelBackMultiplier = this.Columns["AccelBackMultiplier"];
                this.columnBaseSignature = this.Columns["BaseSignature"];
                this.columnEnergyMax = this.Columns["EnergyMax"];
                this.columnRateRechargeEnergy = this.Columns["RateRechargeEnergy"];
                this.columnTechBitsRequired = this.Columns["TechBitsRequired"];
                this.columnTechBitsEffect = this.Columns["TechBitsEffect"];
                this.columnCapabilities = this.Columns["Capabilities"];
                this.columnMaxAmmo = this.Columns["MaxAmmo"];
                this.columnMaxFuel = this.Columns["MaxFuel"];
                this.columnPRIcon = this.Columns["PRIcon"];
                this.columnShieldPartMask = this.Columns["ShieldPartMask"];
                this.columnAfterburnerPartMask = this.Columns["AfterburnerPartMask"];
                this.columnCloakPartMask = this.Columns["CloakPartMask"];
                this.columnMagazinePartMask = this.Columns["MagazinePartMask"];
                this.columnDispenserPartMask = this.Columns["DispenserPartMask"];
                this.columnChaffPartMask = this.Columns["ChaffPartMask"];
                this.columnMagazineCapacity = this.Columns["MagazineCapacity"];
                this.columnDispenserCapacity = this.Columns["DispenserCapacity"];
                this.columnChaffCapacity = this.Columns["ChaffCapacity"];
                this.columnSuccessorHullID = this.Columns["SuccessorHullID"];
                this.columnPilotHUD = this.Columns["PilotHUD"];
                this.columnObserverHUD = this.Columns["ObserverHUD"];
                this.columnInteriorSound = this.Columns["InteriorSound"];
                this.columnExteriorSound = this.Columns["ExteriorSound"];
                this.columnThrustInteriorSound = this.Columns["ThrustInteriorSound"];
                this.columnThrustExteriorSound = this.Columns["ThrustExteriorSound"];
                this.columnTurnInteriorSound = this.Columns["TurnInteriorSound"];
                this.columnTurnExteriorSound = this.Columns["TurnExteriorSound"];
                this.columnSortOrder = this.Columns["SortOrder"];
                this.columnPreferredPartID14 = this.Columns["PreferredPartID14"];
                this.columnPreferredPartID13 = this.Columns["PreferredPartID13"];
                this.columnPreferredPartID12 = this.Columns["PreferredPartID12"];
                this.columnPreferredPartID11 = this.Columns["PreferredPartID11"];
                this.columnPreferredPartID10 = this.Columns["PreferredPartID10"];
                this.columnPreferredPartID9 = this.Columns["PreferredPartID9"];
                this.columnPreferredPartID8 = this.Columns["PreferredPartID8"];
                this.columnPreferredPartID7 = this.Columns["PreferredPartID7"];
                this.columnPreferredPartID6 = this.Columns["PreferredPartID6"];
                this.columnPreferredPartID5 = this.Columns["PreferredPartID5"];
                this.columnPreferredPartID4 = this.Columns["PreferredPartID4"];
                this.columnPreferredPartID3 = this.Columns["PreferredPartID3"];
                this.columnPreferredPartID2 = this.Columns["PreferredPartID2"];
                this.columnPreferredPartID1 = this.Columns["PreferredPartID1"];
                this.columnDefenseType = this.Columns["DefenseType"];
                this.columnSecondsToBuild = this.Columns["SecondsToBuild"];
                this.columnGroupID = this.Columns["GroupID"];
                this.columnRipcordSpeed = this.Columns["RipcordSpeed"];
                this.columnECM = this.Columns["ECM"];
                this.columnRipcordCost = this.Columns["RipcordCost"];
            }
            
            private void InitClass() {
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnShipTypeID = new DataColumn("ShipTypeID", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShipTypeID);
                this.columnModel = new DataColumn("Model", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnModel);
                this.columnLength = new DataColumn("Length", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLength);
                this.columnWeight = new DataColumn("Weight", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWeight);
                this.columnPrice = new DataColumn("Price", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrice);
                this.columnBaseMaxSpeed = new DataColumn("BaseMaxSpeed", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBaseMaxSpeed);
                this.columnBaseHitPoints = new DataColumn("BaseHitPoints", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBaseHitPoints);
                this.columnBaseScannerRange = new DataColumn("BaseScannerRange", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBaseScannerRange);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnMaxRollRate = new DataColumn("MaxRollRate", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxRollRate);
                this.columnMaxPitchRate = new DataColumn("MaxPitchRate", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxPitchRate);
                this.columnMaxYawRate = new DataColumn("MaxYawRate", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxYawRate);
                this.columnDriftRoll = new DataColumn("DriftRoll", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDriftRoll);
                this.columnDriftPitch = new DataColumn("DriftPitch", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDriftPitch);
                this.columnDriftYaw = new DataColumn("DriftYaw", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDriftYaw);
                this.columnAcceleration = new DataColumn("Acceleration", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAcceleration);
                this.columnAccelSideMultiplier = new DataColumn("AccelSideMultiplier", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccelSideMultiplier);
                this.columnAccelBackMultiplier = new DataColumn("AccelBackMultiplier", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccelBackMultiplier);
                this.columnBaseSignature = new DataColumn("BaseSignature", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBaseSignature);
                this.columnEnergyMax = new DataColumn("EnergyMax", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEnergyMax);
                this.columnRateRechargeEnergy = new DataColumn("RateRechargeEnergy", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRateRechargeEnergy);
                this.columnTechBitsRequired = new DataColumn("TechBitsRequired", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTechBitsRequired);
                this.columnTechBitsEffect = new DataColumn("TechBitsEffect", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTechBitsEffect);
                this.columnCapabilities = new DataColumn("Capabilities", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCapabilities);
                this.columnMaxAmmo = new DataColumn("MaxAmmo", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxAmmo);
                this.columnMaxFuel = new DataColumn("MaxFuel", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxFuel);
                this.columnPRIcon = new DataColumn("PRIcon", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPRIcon);
                this.columnShieldPartMask = new DataColumn("ShieldPartMask", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShieldPartMask);
                this.columnAfterburnerPartMask = new DataColumn("AfterburnerPartMask", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAfterburnerPartMask);
                this.columnCloakPartMask = new DataColumn("CloakPartMask", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCloakPartMask);
                this.columnMagazinePartMask = new DataColumn("MagazinePartMask", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMagazinePartMask);
                this.columnDispenserPartMask = new DataColumn("DispenserPartMask", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDispenserPartMask);
                this.columnChaffPartMask = new DataColumn("ChaffPartMask", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChaffPartMask);
                this.columnMagazineCapacity = new DataColumn("MagazineCapacity", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMagazineCapacity);
                this.columnDispenserCapacity = new DataColumn("DispenserCapacity", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDispenserCapacity);
                this.columnChaffCapacity = new DataColumn("ChaffCapacity", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChaffCapacity);
                this.columnSuccessorHullID = new DataColumn("SuccessorHullID", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSuccessorHullID);
                this.columnPilotHUD = new DataColumn("PilotHUD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPilotHUD);
                this.columnObserverHUD = new DataColumn("ObserverHUD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObserverHUD);
                this.columnInteriorSound = new DataColumn("InteriorSound", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInteriorSound);
                this.columnExteriorSound = new DataColumn("ExteriorSound", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExteriorSound);
                this.columnThrustInteriorSound = new DataColumn("ThrustInteriorSound", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnThrustInteriorSound);
                this.columnThrustExteriorSound = new DataColumn("ThrustExteriorSound", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnThrustExteriorSound);
                this.columnTurnInteriorSound = new DataColumn("TurnInteriorSound", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTurnInteriorSound);
                this.columnTurnExteriorSound = new DataColumn("TurnExteriorSound", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTurnExteriorSound);
                this.columnSortOrder = new DataColumn("SortOrder", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortOrder);
                this.columnPreferredPartID14 = new DataColumn("PreferredPartID14", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID14);
                this.columnPreferredPartID13 = new DataColumn("PreferredPartID13", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID13);
                this.columnPreferredPartID12 = new DataColumn("PreferredPartID12", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID12);
                this.columnPreferredPartID11 = new DataColumn("PreferredPartID11", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID11);
                this.columnPreferredPartID10 = new DataColumn("PreferredPartID10", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID10);
                this.columnPreferredPartID9 = new DataColumn("PreferredPartID9", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID9);
                this.columnPreferredPartID8 = new DataColumn("PreferredPartID8", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID8);
                this.columnPreferredPartID7 = new DataColumn("PreferredPartID7", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID7);
                this.columnPreferredPartID6 = new DataColumn("PreferredPartID6", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID6);
                this.columnPreferredPartID5 = new DataColumn("PreferredPartID5", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID5);
                this.columnPreferredPartID4 = new DataColumn("PreferredPartID4", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID4);
                this.columnPreferredPartID3 = new DataColumn("PreferredPartID3", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID3);
                this.columnPreferredPartID2 = new DataColumn("PreferredPartID2", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID2);
                this.columnPreferredPartID1 = new DataColumn("PreferredPartID1", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreferredPartID1);
                this.columnDefenseType = new DataColumn("DefenseType", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDefenseType);
                this.columnSecondsToBuild = new DataColumn("SecondsToBuild", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSecondsToBuild);
                this.columnGroupID = new DataColumn("GroupID", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGroupID);
                this.columnRipcordSpeed = new DataColumn("RipcordSpeed", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRipcordSpeed);
                this.columnECM = new DataColumn("ECM", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnECM);
                this.columnRipcordCost = new DataColumn("RipcordCost", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRipcordCost);
                this.Constraints.Add(new UniqueConstraint("KeyShipTypeID", new DataColumn[] {
                                this.columnShipTypeID}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 20;
                this.columnShipTypeID.AllowDBNull = false;
                this.columnShipTypeID.Unique = true;
                this.columnModel.AllowDBNull = false;
                this.columnLength.AllowDBNull = false;
                this.columnWeight.AllowDBNull = false;
                this.columnPrice.AllowDBNull = false;
                this.columnPrice.DefaultValue = 0;
                this.columnBaseMaxSpeed.AllowDBNull = false;
                this.columnBaseHitPoints.AllowDBNull = false;
                this.columnBaseScannerRange.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 200;
                this.columnMaxRollRate.AllowDBNull = false;
                this.columnMaxPitchRate.AllowDBNull = false;
                this.columnMaxYawRate.AllowDBNull = false;
                this.columnDriftRoll.AllowDBNull = false;
                this.columnDriftPitch.AllowDBNull = false;
                this.columnDriftYaw.AllowDBNull = false;
                this.columnAcceleration.AllowDBNull = false;
                this.columnAccelSideMultiplier.AllowDBNull = false;
                this.columnAccelBackMultiplier.AllowDBNull = false;
                this.columnBaseSignature.AllowDBNull = false;
                this.columnEnergyMax.AllowDBNull = false;
                this.columnRateRechargeEnergy.AllowDBNull = false;
                this.columnTechBitsRequired.AllowDBNull = false;
                this.columnTechBitsEffect.AllowDBNull = false;
                this.columnCapabilities.AllowDBNull = false;
                this.columnMaxAmmo.AllowDBNull = false;
                this.columnMaxFuel.AllowDBNull = false;
                this.columnPRIcon.AllowDBNull = false;
                this.columnShieldPartMask.AllowDBNull = false;
                this.columnAfterburnerPartMask.AllowDBNull = false;
                this.columnCloakPartMask.AllowDBNull = false;
                this.columnMagazinePartMask.AllowDBNull = false;
                this.columnDispenserPartMask.AllowDBNull = false;
                this.columnChaffPartMask.AllowDBNull = false;
                this.columnMagazineCapacity.AllowDBNull = false;
                this.columnDispenserCapacity.AllowDBNull = false;
                this.columnChaffCapacity.AllowDBNull = false;
                this.columnPilotHUD.AllowDBNull = false;
                this.columnPilotHUD.DefaultValue = "dialog";
                this.columnObserverHUD.AllowDBNull = false;
                this.columnObserverHUD.DefaultValue = "dialog";
                this.columnInteriorSound.AllowDBNull = false;
                this.columnExteriorSound.AllowDBNull = false;
                this.columnThrustInteriorSound.AllowDBNull = false;
                this.columnThrustExteriorSound.AllowDBNull = false;
                this.columnTurnInteriorSound.AllowDBNull = false;
                this.columnTurnExteriorSound.AllowDBNull = false;
                this.columnDefenseType.AllowDBNull = false;
                this.columnSecondsToBuild.AllowDBNull = false;
                this.columnSecondsToBuild.DefaultValue = 0;
                this.columnGroupID.DefaultValue = 0;
                this.columnRipcordSpeed.AllowDBNull = false;
                this.columnRipcordSpeed.DefaultValue = 1F;
                this.columnECM.AllowDBNull = false;
                this.columnRipcordCost.AllowDBNull = false;
            }
            
            public ShipTypesRow NewShipTypesRow() {
                return ((ShipTypesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ShipTypesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ShipTypesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShipTypesRowChanged != null)) {
                    this.ShipTypesRowChanged(this, new ShipTypesRowChangeEvent(((ShipTypesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShipTypesRowChanging != null)) {
                    this.ShipTypesRowChanging(this, new ShipTypesRowChangeEvent(((ShipTypesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShipTypesRowDeleted != null)) {
                    this.ShipTypesRowDeleted(this, new ShipTypesRowChangeEvent(((ShipTypesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShipTypesRowDeleting != null)) {
                    this.ShipTypesRowDeleting(this, new ShipTypesRowChangeEvent(((ShipTypesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveShipTypesRow(ShipTypesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ShipTypesRow : DataRow {
            
            private ShipTypesDataTable tableShipTypes;
            
            internal ShipTypesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableShipTypes = ((ShipTypesDataTable)(this.Table));
            }
            
            public string Name {
                get {
                    return ((string)(this[this.tableShipTypes.NameColumn]));
                }
                set {
                    this[this.tableShipTypes.NameColumn] = value;
                }
            }
            
            public short ShipTypeID {
                get {
                    return ((short)(this[this.tableShipTypes.ShipTypeIDColumn]));
                }
                set {
                    this[this.tableShipTypes.ShipTypeIDColumn] = value;
                }
            }
            
            public string Model {
                get {
                    return ((string)(this[this.tableShipTypes.ModelColumn]));
                }
                set {
                    this[this.tableShipTypes.ModelColumn] = value;
                }
            }
            
            public System.Single Length {
                get {
                    return ((System.Single)(this[this.tableShipTypes.LengthColumn]));
                }
                set {
                    this[this.tableShipTypes.LengthColumn] = value;
                }
            }
            
            public System.Single Weight {
                get {
                    return ((System.Single)(this[this.tableShipTypes.WeightColumn]));
                }
                set {
                    this[this.tableShipTypes.WeightColumn] = value;
                }
            }
            
            public int Price {
                get {
                    return ((int)(this[this.tableShipTypes.PriceColumn]));
                }
                set {
                    this[this.tableShipTypes.PriceColumn] = value;
                }
            }
            
            public int BaseMaxSpeed {
                get {
                    return ((int)(this[this.tableShipTypes.BaseMaxSpeedColumn]));
                }
                set {
                    this[this.tableShipTypes.BaseMaxSpeedColumn] = value;
                }
            }
            
            public short BaseHitPoints {
                get {
                    return ((short)(this[this.tableShipTypes.BaseHitPointsColumn]));
                }
                set {
                    this[this.tableShipTypes.BaseHitPointsColumn] = value;
                }
            }
            
            public int BaseScannerRange {
                get {
                    return ((int)(this[this.tableShipTypes.BaseScannerRangeColumn]));
                }
                set {
                    this[this.tableShipTypes.BaseScannerRangeColumn] = value;
                }
            }
            
            public string Description {
                get {
                    return ((string)(this[this.tableShipTypes.DescriptionColumn]));
                }
                set {
                    this[this.tableShipTypes.DescriptionColumn] = value;
                }
            }
            
            public System.Single MaxRollRate {
                get {
                    return ((System.Single)(this[this.tableShipTypes.MaxRollRateColumn]));
                }
                set {
                    this[this.tableShipTypes.MaxRollRateColumn] = value;
                }
            }
            
            public System.Single MaxPitchRate {
                get {
                    return ((System.Single)(this[this.tableShipTypes.MaxPitchRateColumn]));
                }
                set {
                    this[this.tableShipTypes.MaxPitchRateColumn] = value;
                }
            }
            
            public System.Single MaxYawRate {
                get {
                    return ((System.Single)(this[this.tableShipTypes.MaxYawRateColumn]));
                }
                set {
                    this[this.tableShipTypes.MaxYawRateColumn] = value;
                }
            }
            
            public System.Single DriftRoll {
                get {
                    return ((System.Single)(this[this.tableShipTypes.DriftRollColumn]));
                }
                set {
                    this[this.tableShipTypes.DriftRollColumn] = value;
                }
            }
            
            public System.Single DriftPitch {
                get {
                    return ((System.Single)(this[this.tableShipTypes.DriftPitchColumn]));
                }
                set {
                    this[this.tableShipTypes.DriftPitchColumn] = value;
                }
            }
            
            public System.Single DriftYaw {
                get {
                    return ((System.Single)(this[this.tableShipTypes.DriftYawColumn]));
                }
                set {
                    this[this.tableShipTypes.DriftYawColumn] = value;
                }
            }
            
            public System.Single Acceleration {
                get {
                    return ((System.Single)(this[this.tableShipTypes.AccelerationColumn]));
                }
                set {
                    this[this.tableShipTypes.AccelerationColumn] = value;
                }
            }
            
            public System.Single AccelSideMultiplier {
                get {
                    return ((System.Single)(this[this.tableShipTypes.AccelSideMultiplierColumn]));
                }
                set {
                    this[this.tableShipTypes.AccelSideMultiplierColumn] = value;
                }
            }
            
            public System.Single AccelBackMultiplier {
                get {
                    return ((System.Single)(this[this.tableShipTypes.AccelBackMultiplierColumn]));
                }
                set {
                    this[this.tableShipTypes.AccelBackMultiplierColumn] = value;
                }
            }
            
            public short BaseSignature {
                get {
                    return ((short)(this[this.tableShipTypes.BaseSignatureColumn]));
                }
                set {
                    this[this.tableShipTypes.BaseSignatureColumn] = value;
                }
            }
            
            public System.Single EnergyMax {
                get {
                    return ((System.Single)(this[this.tableShipTypes.EnergyMaxColumn]));
                }
                set {
                    this[this.tableShipTypes.EnergyMaxColumn] = value;
                }
            }
            
            public System.Single RateRechargeEnergy {
                get {
                    return ((System.Single)(this[this.tableShipTypes.RateRechargeEnergyColumn]));
                }
                set {
                    this[this.tableShipTypes.RateRechargeEnergyColumn] = value;
                }
            }
            
            public string TechBitsRequired {
                get {
                    return ((string)(this[this.tableShipTypes.TechBitsRequiredColumn]));
                }
                set {
                    this[this.tableShipTypes.TechBitsRequiredColumn] = value;
                }
            }
            
            public string TechBitsEffect {
                get {
                    return ((string)(this[this.tableShipTypes.TechBitsEffectColumn]));
                }
                set {
                    this[this.tableShipTypes.TechBitsEffectColumn] = value;
                }
            }
            
            public short Capabilities {
                get {
                    return ((short)(this[this.tableShipTypes.CapabilitiesColumn]));
                }
                set {
                    this[this.tableShipTypes.CapabilitiesColumn] = value;
                }
            }
            
            public short MaxAmmo {
                get {
                    return ((short)(this[this.tableShipTypes.MaxAmmoColumn]));
                }
                set {
                    this[this.tableShipTypes.MaxAmmoColumn] = value;
                }
            }
            
            public short MaxFuel {
                get {
                    return ((short)(this[this.tableShipTypes.MaxFuelColumn]));
                }
                set {
                    this[this.tableShipTypes.MaxFuelColumn] = value;
                }
            }
            
            public string PRIcon {
                get {
                    return ((string)(this[this.tableShipTypes.PRIconColumn]));
                }
                set {
                    this[this.tableShipTypes.PRIconColumn] = value;
                }
            }
            
            public short ShieldPartMask {
                get {
                    return ((short)(this[this.tableShipTypes.ShieldPartMaskColumn]));
                }
                set {
                    this[this.tableShipTypes.ShieldPartMaskColumn] = value;
                }
            }
            
            public short AfterburnerPartMask {
                get {
                    return ((short)(this[this.tableShipTypes.AfterburnerPartMaskColumn]));
                }
                set {
                    this[this.tableShipTypes.AfterburnerPartMaskColumn] = value;
                }
            }
            
            public short CloakPartMask {
                get {
                    return ((short)(this[this.tableShipTypes.CloakPartMaskColumn]));
                }
                set {
                    this[this.tableShipTypes.CloakPartMaskColumn] = value;
                }
            }
            
            public short MagazinePartMask {
                get {
                    return ((short)(this[this.tableShipTypes.MagazinePartMaskColumn]));
                }
                set {
                    this[this.tableShipTypes.MagazinePartMaskColumn] = value;
                }
            }
            
            public short DispenserPartMask {
                get {
                    return ((short)(this[this.tableShipTypes.DispenserPartMaskColumn]));
                }
                set {
                    this[this.tableShipTypes.DispenserPartMaskColumn] = value;
                }
            }
            
            public short ChaffPartMask {
                get {
                    return ((short)(this[this.tableShipTypes.ChaffPartMaskColumn]));
                }
                set {
                    this[this.tableShipTypes.ChaffPartMaskColumn] = value;
                }
            }
            
            public short MagazineCapacity {
                get {
                    return ((short)(this[this.tableShipTypes.MagazineCapacityColumn]));
                }
                set {
                    this[this.tableShipTypes.MagazineCapacityColumn] = value;
                }
            }
            
            public short DispenserCapacity {
                get {
                    return ((short)(this[this.tableShipTypes.DispenserCapacityColumn]));
                }
                set {
                    this[this.tableShipTypes.DispenserCapacityColumn] = value;
                }
            }
            
            public short ChaffCapacity {
                get {
                    return ((short)(this[this.tableShipTypes.ChaffCapacityColumn]));
                }
                set {
                    this[this.tableShipTypes.ChaffCapacityColumn] = value;
                }
            }
            
            public short SuccessorHullID {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.SuccessorHullIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.SuccessorHullIDColumn] = value;
                }
            }
            
            public string PilotHUD {
                get {
                    return ((string)(this[this.tableShipTypes.PilotHUDColumn]));
                }
                set {
                    this[this.tableShipTypes.PilotHUDColumn] = value;
                }
            }
            
            public string ObserverHUD {
                get {
                    return ((string)(this[this.tableShipTypes.ObserverHUDColumn]));
                }
                set {
                    this[this.tableShipTypes.ObserverHUDColumn] = value;
                }
            }
            
            public short InteriorSound {
                get {
                    return ((short)(this[this.tableShipTypes.InteriorSoundColumn]));
                }
                set {
                    this[this.tableShipTypes.InteriorSoundColumn] = value;
                }
            }
            
            public short ExteriorSound {
                get {
                    return ((short)(this[this.tableShipTypes.ExteriorSoundColumn]));
                }
                set {
                    this[this.tableShipTypes.ExteriorSoundColumn] = value;
                }
            }
            
            public short ThrustInteriorSound {
                get {
                    return ((short)(this[this.tableShipTypes.ThrustInteriorSoundColumn]));
                }
                set {
                    this[this.tableShipTypes.ThrustInteriorSoundColumn] = value;
                }
            }
            
            public short ThrustExteriorSound {
                get {
                    return ((short)(this[this.tableShipTypes.ThrustExteriorSoundColumn]));
                }
                set {
                    this[this.tableShipTypes.ThrustExteriorSoundColumn] = value;
                }
            }
            
            public short TurnInteriorSound {
                get {
                    return ((short)(this[this.tableShipTypes.TurnInteriorSoundColumn]));
                }
                set {
                    this[this.tableShipTypes.TurnInteriorSoundColumn] = value;
                }
            }
            
            public short TurnExteriorSound {
                get {
                    return ((short)(this[this.tableShipTypes.TurnExteriorSoundColumn]));
                }
                set {
                    this[this.tableShipTypes.TurnExteriorSoundColumn] = value;
                }
            }
            
            public int SortOrder {
                get {
                    try {
                        return ((int)(this[this.tableShipTypes.SortOrderColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.SortOrderColumn] = value;
                }
            }
            
            public short PreferredPartID14 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID14Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID14Column] = value;
                }
            }
            
            public short PreferredPartID13 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID13Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID13Column] = value;
                }
            }
            
            public short PreferredPartID12 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID12Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID12Column] = value;
                }
            }
            
            public short PreferredPartID11 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID11Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID11Column] = value;
                }
            }
            
            public short PreferredPartID10 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID10Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID10Column] = value;
                }
            }
            
            public short PreferredPartID9 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID9Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID9Column] = value;
                }
            }
            
            public short PreferredPartID8 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID8Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID8Column] = value;
                }
            }
            
            public short PreferredPartID7 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID7Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID7Column] = value;
                }
            }
            
            public short PreferredPartID6 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID6Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID6Column] = value;
                }
            }
            
            public short PreferredPartID5 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID5Column] = value;
                }
            }
            
            public short PreferredPartID4 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID4Column] = value;
                }
            }
            
            public short PreferredPartID3 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID3Column] = value;
                }
            }
            
            public short PreferredPartID2 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID2Column] = value;
                }
            }
            
            public short PreferredPartID1 {
                get {
                    try {
                        return ((short)(this[this.tableShipTypes.PreferredPartID1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.PreferredPartID1Column] = value;
                }
            }
            
            public System.Byte DefenseType {
                get {
                    return ((System.Byte)(this[this.tableShipTypes.DefenseTypeColumn]));
                }
                set {
                    this[this.tableShipTypes.DefenseTypeColumn] = value;
                }
            }
            
            public short SecondsToBuild {
                get {
                    return ((short)(this[this.tableShipTypes.SecondsToBuildColumn]));
                }
                set {
                    this[this.tableShipTypes.SecondsToBuildColumn] = value;
                }
            }
            
            public System.Byte GroupID {
                get {
                    try {
                        return ((System.Byte)(this[this.tableShipTypes.GroupIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShipTypes.GroupIDColumn] = value;
                }
            }
            
            public System.Single RipcordSpeed {
                get {
                    return ((System.Single)(this[this.tableShipTypes.RipcordSpeedColumn]));
                }
                set {
                    this[this.tableShipTypes.RipcordSpeedColumn] = value;
                }
            }
            
            public System.Single ECM {
                get {
                    return ((System.Single)(this[this.tableShipTypes.ECMColumn]));
                }
                set {
                    this[this.tableShipTypes.ECMColumn] = value;
                }
            }
            
            public System.Single RipcordCost {
                get {
                    return ((System.Single)(this[this.tableShipTypes.RipcordCostColumn]));
                }
                set {
                    this[this.tableShipTypes.RipcordCostColumn] = value;
                }
            }
            
            public bool IsSuccessorHullIDNull() {
                return this.IsNull(this.tableShipTypes.SuccessorHullIDColumn);
            }
            
            public void SetSuccessorHullIDNull() {
                this[this.tableShipTypes.SuccessorHullIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSortOrderNull() {
                return this.IsNull(this.tableShipTypes.SortOrderColumn);
            }
            
            public void SetSortOrderNull() {
                this[this.tableShipTypes.SortOrderColumn] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID14Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID14Column);
            }
            
            public void SetPreferredPartID14Null() {
                this[this.tableShipTypes.PreferredPartID14Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID13Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID13Column);
            }
            
            public void SetPreferredPartID13Null() {
                this[this.tableShipTypes.PreferredPartID13Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID12Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID12Column);
            }
            
            public void SetPreferredPartID12Null() {
                this[this.tableShipTypes.PreferredPartID12Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID11Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID11Column);
            }
            
            public void SetPreferredPartID11Null() {
                this[this.tableShipTypes.PreferredPartID11Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID10Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID10Column);
            }
            
            public void SetPreferredPartID10Null() {
                this[this.tableShipTypes.PreferredPartID10Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID9Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID9Column);
            }
            
            public void SetPreferredPartID9Null() {
                this[this.tableShipTypes.PreferredPartID9Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID8Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID8Column);
            }
            
            public void SetPreferredPartID8Null() {
                this[this.tableShipTypes.PreferredPartID8Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID7Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID7Column);
            }
            
            public void SetPreferredPartID7Null() {
                this[this.tableShipTypes.PreferredPartID7Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID6Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID6Column);
            }
            
            public void SetPreferredPartID6Null() {
                this[this.tableShipTypes.PreferredPartID6Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID5Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID5Column);
            }
            
            public void SetPreferredPartID5Null() {
                this[this.tableShipTypes.PreferredPartID5Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID4Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID4Column);
            }
            
            public void SetPreferredPartID4Null() {
                this[this.tableShipTypes.PreferredPartID4Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID3Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID3Column);
            }
            
            public void SetPreferredPartID3Null() {
                this[this.tableShipTypes.PreferredPartID3Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID2Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID2Column);
            }
            
            public void SetPreferredPartID2Null() {
                this[this.tableShipTypes.PreferredPartID2Column] = System.Convert.DBNull;
            }
            
            public bool IsPreferredPartID1Null() {
                return this.IsNull(this.tableShipTypes.PreferredPartID1Column);
            }
            
            public void SetPreferredPartID1Null() {
                this[this.tableShipTypes.PreferredPartID1Column] = System.Convert.DBNull;
            }
            
            public bool IsGroupIDNull() {
                return this.IsNull(this.tableShipTypes.GroupIDColumn);
            }
            
            public void SetGroupIDNull() {
                this[this.tableShipTypes.GroupIDColumn] = System.Convert.DBNull;
            }
            
            public CivsRow[] GetCivsRowsByShipTypesCivs() {
                return ((CivsRow[])(this.GetChildRows(this.Table.ChildRelations["ShipTypesCivs"])));
            }
            
            public CivsRow[] GetCivsRowsByShipTypesCivs1() {
                return ((CivsRow[])(this.GetChildRows(this.Table.ChildRelations["ShipTypesCivs1"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ShipTypesRowChangeEvent : EventArgs {
            
            private ShipTypesRow eventRow;
            
            private DataRowAction eventAction;
            
            public ShipTypesRowChangeEvent(ShipTypesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ShipTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
